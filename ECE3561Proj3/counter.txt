----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    16:59:34 04/19/2024 
-- Design Name: 
-- Module Name:    counter - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

-- Slides 18, 19 in another module to create package

entity counter is
generic (N: integer : = 4);
port(	Q: out std_logic_vector(N-I downto 0); -- N bit Addend x 
		ENT: in std_logic;
		CLR: in std_logic;
		CLK: in std_logic;
		);
end counter;

architecture Behavioral of counter is
	signal CNT: std_logic_vector(N-I downto 0); -- Internal state begin
	process(CIk)
		begin
			if rising_edge(Clk) then
				if CLR = '1' then
					CNT <= to_unsigned(0,N);
				elsif ENT = '1' then
					CNT <= std_logic_vector(unsigned(CNT) + 1);
				end if;
			end if;
	end process;
begin


end Behavioral;

